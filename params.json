{"name":"Nioclient","tagline":"Simple Java NIO wrapper for client applications","body":"NioClient\r\n=========\r\n\r\nNetty is a brilliant framework for server applications, but it's kind of heavy for client side, NioClient wants to provides serveral light classes to use nonblocking socket.\r\n\r\nSome of idea is coming from Netty, but I try to make it simple.\r\n\r\nThere are also some references (thanks to authors for sharing):\r\n\r\n1. http://rox-xmlrpc.sourceforge.net/niotut/\r\n2. http://today.java.net/article/2007/02/08/architecture-highly-scalable-nio-based-server\r\n\r\nThread model\r\n=========\r\n1. there are always two threads running after NioManager.init(), one is selector thread, another is I/O thread.\r\n2. all operations of selector key set will be processed in selector thread.\r\n3. all handler's callback will be called in I/O thread.\r\n\r\nUsage\r\n=========\r\nplease check NioDemo class as an example, here is copy:\r\n\r\n\t\tNioManager.instance().init();\r\n\t\t\r\n\t\tfinal String host = \"www.yahoo.com\";\r\n\t\tfinal int port = 80;\r\n\t\tfinal ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n\t\tout.reset();\r\n\t\tNioHandler handler = new NioHandler() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onConnected(NioTcpClient client) throws Exception {\r\n\t\t\t\tlog.info(\"{} was connected\", client);\r\n\t\t\t\tString getRequest = \"GET / HTTP/1.0\\r\\nHost: www.yahoo.com\\r\\nUser-Agent: NioClient 1.0\\r\\n\\r\\n\";\r\n\t\t\t\tbyte[] data = getRequest.getBytes(Charset.forName(\"UTF-8\"));\r\n\t\t\t\tclient.write(data);\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void onDisconnected(NioTcpClient client) throws Exception {\r\n\t\t\t\tlog.info(\"{} was disconnected\", client);\r\n\t\t\t\tString str = new String(out.toByteArray(), Charset.forName(\"UTF-8\"));\r\n\t\t\t\tout.close();\r\n\t\t\t\tlog.info(str);\r\n\t\t\t\tNioManager.instance().shutdown();\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void onDataReceived(NioTcpClient client, ByteBuffer buffer)\r\n\t\t\t\t\tthrows Exception {\r\n\t\t\t\tlog.info(\"received {} bytes by {}\", buffer.remaining(), client);\r\n\t\t\t\tout.write(buffer.array());\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void exceptionCaught(NioTcpClient client, Exception e)\r\n\t\t\t\t\tthrows Exception {\r\n\t\t\t\tlog.error(\"\", e);\r\n\t\t\t\tclient.disconnect();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\tNioTcpClient socket = new NioTcpClient(handler);\r\n\t\tsocket.connect(host, port);\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}